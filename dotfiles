#!/usr/bin/env bash
set -e

dotfiles_dir="$(dirname "$(readlink "$0")")"
dotfiles_src_dir="$dotfiles_dir/src"

# Update the dotfiles repo.
function update {
  (
    cd "$dotfiles_dir"
    echo Updating dotfiles...
    git pull origin

    dotfiles install
    dotfiles link
  )
}

# Show the usage screen.
function print_help {

  # Add an indent level to messages.
  function indent {
    local indention=""

    for _ in $(seq 1 "$1"); do
      indention="$indention    "
    done

    echo "$indention$2"
  }

  echo ""

  indent 1 "Usage: dotfiles <command>"
  indent 2 "update  - Update the dotfiles framework"
  indent 2 "link    - Symlink everything in 'dotfiles/linked'"
  indent 2 "install - Install system-wide dependencies"
  indent 2 "dir     - Print the dotfiles directory"
  indent 2 "eject   - Gather historical files into a tarball"
  indent 2 "unpack  - Restore ejected files back to their origin"

  echo ""
}

# Figure out what command to run.
case "$1" in
  "link")
    # Call through to Rust. Eventually, this dotfiles
    # script will be replaced with a Rust implementation.
    sudo "$dotfiles_src_dir/make-links"
    ;;
  "update")
    update
    ;;
  "install")
    "$dotfiles_src_dir/install"
    ;;
  "dir")
    echo "$dotfiles_dir"
    ;;
  "eject")
    "$dotfiles_src_dir/eject"
    ;;
  "unpack")
    "$dotfiles_src_dir/unpack" "${@:2}"
    ;;
  *)
    if [[ -n "$1" && "$1" != "--help" ]]; then
      echo "Invalid command '$*'. Showing help instead."
      print_help

      # Probably a typo. Make them feel the pain!
      exit 1
    fi

    # Exit safely
    print_help
    ;;
esac
