#!/usr/bin/env bash
# shellcheck disable=SC1091,SC1090
set -e

ARTIFACTS_DIR="$(dotfiles dir)/artifacts"

if [[ ! -e "$ARTIFACTS_DIR" ]]; then
  mkdir "$ARTIFACTS_DIR"
fi

# Whether a command exists.
function installed {
  command -v "$1" > /dev/null
}

function install_nix {
  if installed nix; then
    return
  fi

  if ! installed curl; then
    echo "Installing nix requires curl. Aborting."
  fi

  curl --location --proto '=https' --tlsv1.2 https://nixos.org/nix/install | sh

  # Activate!
  source ~/.nix-profile/etc/profile.d/nix.sh
}

function install_packages {
  nix-env --file "$(dotfiles dir)/default.nix" --install --keep-going
}

function install_node {
  local node_version=v14.13.1

  if installed node && [[ "$(node --version)" == "$node_version" ]]; then
    return
  fi

  fnm install "$node_version" > /dev/null
  fnm use "$node_version" > /dev/null
  fnm alias "$node_version" default > /dev/null

  # Make the node path available.
  export PATH=$HOME/.fnm:$PATH
  eval "$(fnm env --multi)"
}

function install_rustfmt {
  if ! installed rustfmt; then
    rustup component add rustfmt-preview
  fi
}

function use_zsh {
  local zsh_path="$(command -v zsh)"

  # Don't attempt to change shell on Travis CI.
  # The build will hang forever.
  if [[ "$SHELL" == "$zsh_path" || -n "$CI" ]]; then
    return
  fi

  chsh -s "$(command -v zsh)"
}

install_nix
install_packages
install_node
install_rustfmt

use_zsh
